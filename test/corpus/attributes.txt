===============================================
single variable attribute
===============================================

netcdf basic {
    variables:
        float a ;
        float a:attr = 1;
}

---

(dataset
  (dataset_id)
  (variables_section
    (variable_declarations
      type: (typeref
        (type))
      (variable
        name: (identifier)))
    (attribute
      type: (typeref
        (type))
      variable: (identifier)
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single variable attribute multiple values
===============================================

netcdf basic {
    variables:
        float a ;
        float a:range = 1.0, 5.0;
}

---

(dataset
  (dataset_id)
  (variables_section
    (variable_declarations
      type: (typeref
        (type))
      (variable
        name: (identifier)))
    (attribute
      type: (typeref
        (type))
      variable: (identifier)
      name: (identifier)
      value: (value
        (float))
      value: (value
        (float)))))

===============================================
single untyped variable attribute -- known ambiguity treated as typed global attribute
===============================================

netcdf basic {
    variables:
        float a ;
        a:attr = 1;
}

---

(dataset
  (dataset_id)
  (variables_section
    (variable_declarations
      type: (typeref
        (type))
      (variable
        name: (identifier)))
    (attribute
      type: (typeref
        (derived_type
          (identifier)))
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single primitive typed global attribute in variables
===============================================

netcdf basic {
    variables:
        int :attr = 1;
}

---

(dataset
  (dataset_id)
  (variables_section
    (attribute
      type: (typeref
        (type))
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single derived typed global attribute in variables
===============================================

netcdf basic {
    variables:
        my_type :asdf = 12;
}

---

(dataset
  (dataset_id)
  (variables_section
    (attribute
      type: (typeref
        (derived_type
          (identifier)))
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single global attribute (untyped) in variables
===============================================

netcdf basic {
    variables:
        :attr = 1;
}

---

(dataset
  (dataset_id)
  (variables_section
    (attribute
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single primitive typed global attribute in dimensions
===============================================

netcdf basic {
    dimensions:
        a = 1;
        int :attr = 1;
}

---

(dataset
  (dataset_id)
  (dimensions_section
    (dimension_declarations
      (dimension
        name: (identifier)
        size: (dimension_size
          (const_positive_int))))
    (attribute
      type: (typeref
        (type))
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single derived typed global attribute in dimensions
===============================================

netcdf basic {
    dimensions:
        a = 1;
        my_type :asdf = 12;
}

---

(dataset
  (dataset_id)
  (dimensions_section
    (dimension_declarations
      (dimension
        name: (identifier)
        size: (dimension_size
          (const_positive_int))))
    (attribute
      type: (typeref
        (derived_type
          (identifier)))
      name: (identifier)
      value: (value
        (integer)))))

===============================================
single global attribute (untyped) in dimensions
===============================================

netcdf basic {
    dimensions:
        a = 1;
        :attr = 1;
}

---

(dataset
  (dataset_id)
  (dimensions_section
    (dimension_declarations
      (dimension
        name: (identifier)
        size: (dimension_size
          (const_positive_int))))
    (attribute
      name: (identifier)
      value: (value
        (integer)))))
